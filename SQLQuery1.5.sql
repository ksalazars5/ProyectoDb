USE RINCONGT;

SELECT *
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME = 'DEVOLUCION';

SELECT * FROM PRODUCTO;
DROP TABLE DEVOLUCION;

CREATE TABLE DEVOLUCION (
    ID_DEVOLUCION INT IDENTITY(1,1) PRIMARY KEY,
    ID_FACTURA INT FOREIGN KEY REFERENCES FACTURA(ID_FACTURA),
    ID_PRODUCTO INT FOREIGN KEY REFERENCES PRODUCTO(ID_PRODUCTO),
    CANTIDAD_DEVUELTA INT NOT NULL,
    RAZON VARCHAR(255) NOT NULL,
    DESCRIPCION_PRODUCTO VARCHAR(255),
    FECHA_DEVOLUCION DATE NOT NULL,
);

SELECT * FROM FACTURA WHERE ID_FACTURA = 1029;


INSERT INTO DEVOLUCION (ID_FACTURA, ID_PRODUCTO, CANTIDAD_DEVUELTA, RAZON, DESCRIPCION_PRODUCTO, FECHA_DEVOLUCION)
VALUES (1, 2, 5, 'Producto defectuoso', 'Descripci�n del producto', '2024-10-22');

ALTER TABLE DEVOLUCION
DROP CONSTRAINT FK_DEVOLUCION_FACTURA;

CREATE TABLE DEVOLUCION (
    ID_DEVOLUCION INT IDENTITY(1,1) PRIMARY KEY,
    ID_FACTURA INT FOREIGN KEY REFERENCES FACTURA(ID_FACTURA),
    ID_PRODUCTO INT FOREIGN KEY REFERENCES PRODUCTO(ID_PRODUCTO),
    CANTIDAD_DEVUELTA INT NOT NULL,
    RAZON VARCHAR(255) NOT NULL,
    DESCRIPCION_PRODUCTO VARCHAR(255), -- Nueva columna para la descripci�n
    FECHA_DEVOLUCION DATE NOT NULL
);

SELECT * FROM PRODUCTO WHERE ID_PRODUCTO = <valor_ID_PRODUCTO>;


ALTER TABLE DEVOLUCION
ADD CONSTRAINT FK_DEVOLUCION_PRODUCTO
FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO);


CREATE PROCEDURE spAgregarProducto
    @ID_CATEGORIA INT,
    @DESCRIPCION VARCHAR(50),
    @COSTO DECIMAL(10,2),
    @PRECIO_VENTA DECIMAL(10,2),
    @INVENTARIO INT
AS
BEGIN
    INSERT INTO PRODUCTO (ID_CATEGORIA, DESCRIPCION, COSTO, PRECIO_VENTA, INVENTARIO)
    VALUES (@ID_CATEGORIA, @DESCRIPCION, @COSTO, @PRECIO_VENTA, @INVENTARIO);
END

EXEC sp_help 'spAgregarProducto';





DROP PROCEDURE IF EXISTS spAgregarProducto;  -- Elimina el procedimiento si existe

CREATE PROCEDURE spAgregarProducto
    @ID_CATEGORIA INT,
    @DESCRIPCION VARCHAR(50),
    @COSTO DECIMAL(10, 2),
    @PRECIO_VENTA DECIMAL(10, 2),
    @INVENTARIO INT  -- Aseg�rate de que este par�metro est� aqu�
AS
BEGIN
    SET NOCOUNT ON;
    
    -- Insertar un nuevo producto en la tabla PRODUCTO
    INSERT INTO PRODUCTO (ID_CATEGORIA, DESCRIPCION, COSTO, PRECIO_VENTA, INVENTARIO)
    VALUES (@ID_CATEGORIA, @DESCRIPCION, @COSTO, @PRECIO_VENTA, @INVENTARIO);
    
    -- Opcionalmente devolver el ID del producto insertado
    SELECT SCOPE_IDENTITY() AS ID_PRODUCTO;
END;


CREATE TABLE VENTA (
    ID_VENTA INT IDENTITY(1,1) PRIMARY KEY,
    FECHA DATETIME NOT NULL,
    TOTAL_FACTURA DECIMAL(10, 2) NOT NULL, -- Sin restricción de clave foránea para este campo
    ID_FACTURA INT FOREIGN KEY REFERENCES FACTURA(ID_FACTURA),
    ID_CLIENTE INT FOREIGN KEY REFERENCES CLIENTE(ID_CLIENTE),
    ID_DEVOLUCION INT FOREIGN KEY REFERENCES DEVOLUCION(ID_DEVOLUCION)
);

--1. Cierre del D�a (Ventas e Ingresos)

SELECT 
    CAST(FECHA AS DATE) AS Fecha,
    SUM(TOTAL) AS Total_Ventas,
    COUNT(*) AS Total_Ventas_Count
FROM 
    VENTA
WHERE 
    CAST(FECHA AS DATE) = CAST(GETDATE() AS DATE)  -- Cambia esto para el d�a que desees
GROUP BY 
    CAST(FECHA AS DATE);

SELECT 
    CAST(FECHA AS DATE) AS Fecha,
    SUM(TOTAL) AS Total_Ventas,
    COUNT(*) AS Total_Ventas_Count
FROM 
    VENTA
WHERE 
    CAST(FECHA AS DATE) = CAST(GETDATE() AS DATE)  -- Puedes ajustar esto a una fecha espec�fica
GROUP BY 
    CAST(FECHA AS DATE);



--2. Reporte de Devoluciones

	SELECT 
    CAST(FECHA_DEVOLUCION AS DATE) AS Fecha,
    SUM(CANTIDAD_DEVUELTA) AS Total_Cantidad_Devuelta,
    COUNT(*) AS Total_Devoluciones
FROM 
    DEVOLUCION
WHERE 
    CAST(FECHA_DEVOLUCION AS DATE) = CAST(GETDATE() AS DATE)  -- Puedes ajustar esto a una fecha espec�fica
GROUP BY 
    CAST(FECHA_DEVOLUCION AS DATE);


--3. Reporte de Clientes

	SELECT 
    ID_CLIENTE, 
    NOMBRE, 
    TELEFONO, 
    DIRECCION, 
    NIT
FROM 
    CLIENTE;


	--4. Reporte de Facturas
	SELECT 
    f.ID_FACTURA,
    c.NOMBRE AS Cliente,
    f.TOTAL_FACTURA,
    f.FECHA
FROM 
    FACTURA f
JOIN 
    CLIENTE c ON f.ID_CLIENTE = c.ID_CLIENTE
WHERE 
    CAST(f.FECHA AS DATE) = CAST(GETDATE() AS DATE)  -- Puedes ajustar esto a una fecha espec�fica
ORDER BY 
    f.FECHA DESC;